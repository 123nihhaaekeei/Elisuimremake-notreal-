local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")
local Workspace = game:GetService("Workspace")
local Lighting = game:GetService("Lighting")

local player = Players.LocalPlayer
local Camera = Workspace.CurrentCamera
local Mouse = player:GetMouse()
local playerCharacter = player.Character or player.CharacterAdded:Wait()

local playerGui = player:WaitForChild("PlayerGui")
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "IntroScreen"
screenGui.Parent = playerGui

local frame = Instance.new("Frame")
frame.Name = "IntroFrame"
frame.Parent = screenGui
frame.Size = UDim2.new(1, 0, 1, 0)
frame.BackgroundTransparency = 1

local imageLabel = Instance.new("ImageLabel")
imageLabel.Name = "IntroImage"
imageLabel.Parent = frame
imageLabel.Size = UDim2.new(0.01, 0, 0.01, 0)
imageLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
imageLabel.Image = "rbxassetid://127430667944718"
imageLabel.BackgroundTransparency = 1
imageLabel.ImageTransparency = 1
imageLabel.AnchorPoint = Vector2.new(0.5, 0.5)

local sound = Instance.new("Sound")
sound.Name = "IntroSound"
sound.Parent = frame
sound.SoundId = "rbxassetid://8940801080"
sound.Volume = 0.5
pcall(function() sound:Play() end)

local blurEffect = Instance.new("BlurEffect")
blurEffect.Parent = Lighting
blurEffect.Size = 60

local zoomTweenInfo = TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
local blurTweenInfo = TweenInfo.new(4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

local fadeIn = TweenService:Create(imageLabel, zoomTweenInfo, {ImageTransparency = 0})
local fadeOut = TweenService:Create(imageLabel, zoomTweenInfo, {ImageTransparency = 1})
local blurTween = TweenService:Create(blurEffect, blurTweenInfo, {Size = 0})
local zoomTween = TweenService:Create(imageLabel, zoomTweenInfo, {Size = UDim2.new(0.35, 0, 0.35, 0)})

pcall(function()
    fadeIn:Play()
    fadeIn.Completed:Wait()
    zoomTween:Play()
    blurTween:Play()
    task.wait(3)
    fadeOut:Play()
    fadeOut.Completed:Wait()
    blurTween.Completed:Wait()
    blurEffect:Destroy()
    screenGui:Destroy()
end)

local target = nil

RunService.RenderStepped:Connect(function()
    if Elisium.Camlock.Spectate and target and target.Character then
        Camera.CameraSubject = target.Character
    elseif player.Character and player.Character:FindFirstChild("Humanoid") then
        Camera.CameraSubject = player.Character.Humanoid
    end
end)

local Notification = Instance.new("ScreenGui")
Notification.Name = "Notification"
Notification.Parent = playerGui
Notification.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

local Holder = Instance.new("Frame")
Holder.Name = "Holder"
Holder.Parent = Notification
Holder.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
Holder.BackgroundTransparency = 1
Holder.Position = UDim2.new(1, -10, 0, 10)
Holder.AnchorPoint = Vector2.new(1, 0)
Holder.Size = UDim2.new(0, 243, 0, 240)

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.Parent = Holder
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 4)

local function createNotificationTemplate(text, duration)
    local Template = Instance.new("Frame")
    Template.Name = text
    Template.Parent = Holder
    Template.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    Template.BorderSizePixel = 0
    Template.Size = UDim2.new(1, 0, 0, 22)
    Template.BackgroundTransparency = 1

    local ColorBar = Instance.new("Frame")
    ColorBar.Name = "ColorBar"
    ColorBar.Parent = Template
    ColorBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    ColorBar.BorderSizePixel = 0
    ColorBar.Size = UDim2.new(0, 2, 0, 22)
    ColorBar.BackgroundTransparency = 1

    local TextLabel = Instance.new("TextLabel")
    TextLabel.Parent = Template
    TextLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel.BackgroundTransparency = 1
    TextLabel.BorderSizePixel = 0
    TextLabel.Position = UDim2.new(0, 8, 0, 0)
    TextLabel.Size = UDim2.new(1, -10, 0, 22)
    TextLabel.Font = Enum.Font.Code
    TextLabel.Text = text .. " [" .. duration .. "s]"
    TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel.TextSize = 12
    TextLabel.TextStrokeTransparency = 0
    TextLabel.TextXAlignment = Enum.TextXAlignment.Left
    TextLabel.BackgroundTransparency = 1

    return Template, ColorBar, TextLabel
end

function notify(text, time)
    if not text or time <= 0 then
        warn("Invalid notification parameters")
        return
    end

    local Template, ColorBar, TextLabel = createNotificationTemplate(text, time)
    local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local fadeInGoal = {BackgroundTransparency = 0}
    local fadeOutGoal = {BackgroundTransparency = 1}

    local sizeTween = TweenService:Create(Template, tweenInfo, fadeInGoal)
    local colorBarTween = TweenService:Create(ColorBar, tweenInfo, fadeInGoal)
    local textTween = TweenService:Create(TextLabel, tweenInfo, fadeInGoal)

    sizeTween:Play()
    colorBarTween:Play()
    textTween:Play()

    local elapsed = 0
    local updateConnection = RunService.RenderStepped:Connect(function(dt)
        elapsed = elapsed + dt
        local remainingTime = math.max(0, time - elapsed)
        TextLabel.Text = text .. " [" .. string.format("%.1f", remainingTime) .. "s]"

        if remainingTime <= 0 then
            updateConnection:Disconnect()
            local fadeOutTween = TweenService:Create(Template, tweenInfo, fadeOutGoal)
            fadeOutTween:Play()
            fadeOutTween.Completed:Wait()
            Template:Destroy()
        end
    end)
end

local function GetClosestPlayer()
    local closestPlayer = nil
    local shortestScore = math.huge

    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= player and plr.Character and plr.Character:FindFirstChild(Elisium.Camlock.AimPart) and plr.Character:FindFirstChild("Humanoid") and plr.Character.Humanoid.Health > 0 then
            local part = plr.Character[Elisium.Camlock.AimPart]
            local relativePos = part.Position - Camera.CFrame.Position
            local playerDistance = relativePos.Magnitude
            local screenPosition, onScreen = Camera:WorldToViewportPoint(part.Position)

            if onScreen then
                local angle = math.deg(math.acos(Camera.CFrame.LookVector:Dot(relativePos.Unit)))
                local mouseDistance = (Vector2.new(screenPosition.X, screenPosition.Y) - Vector2.new(Mouse.X, Mouse.Y)).Magnitude
                local score = mouseDistance * 0.3 + (angle / 90) * 0.5 + (playerDistance / 1000) * 0.2

                local ray = Ray.new(Camera.CFrame.Position, part.Position - Camera.CFrame.Position)
                local hitPart = Workspace:FindPartOnRayWithIgnoreList(ray, {player.Character})

                if (not hitPart or hitPart:IsDescendantOf(plr.Character)) and score < shortestScore then
                    closestPlayer = plr
                    shortestScore = score
                end
            end
        end
    end

    return closestPlayer
end

local function ToggleLock()
    if Elisium.Camlock.Enabled then
        if target then
            notify("Elisium: Unlocked!", 5)
            target = nil
        else
            target = GetClosestPlayer()
            if target then
                notify("Elisium: Locked onto " .. tostring(target.Name), 5)
            else
                notify("Elisium: No target found", 5)
            end
        end
    else
        notify("Elisium: Not enabled", 5)
    end
end

if Elisium.Camlock.Mode == "Tool" then
    local Tool = Instance.new("Tool")
    Tool.RequiresHandle = false
    Tool.Name = "Lock Tool"
    Tool.Parent = player.Backpack

    player.CharacterAdded:Connect(function()
        Tool.Parent = player.Backpack
    end)

    player.CharacterRemoving:Connect(function()
        Tool.Parent = player.Backpack
    end)

    Tool.Activated:Connect(ToggleLock)

elseif Elisium.Camlock.Mode == "Button" then
    local function setupGui()
        local screenGui = playerGui:FindFirstChild("LockScreenGui") or Instance.new("ScreenGui")
        screenGui.Name = "LockScreenGui"
        screenGui.Parent = playerGui

        local button = screenGui:FindFirstChild("LockButton") or Instance.new("ImageButton")
        button.Name = "LockButton"
        button.Size = UDim2.new(0, 55, 0, 55)
        button.Position = UDim2.new(0.5, -100, 0.8, -25)
        button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
        button.Image = "rbxassetid://127430667944718"
        button.Parent = screenGui
        button.Active = true
        button.Draggable = true

        local UICorner = Instance.new("UICorner")
        UICorner.CornerRadius = UDim.new(0, 25)
        UICorner.Parent = button

        button.MouseButton1Click:Connect(ToggleLock)
    end

    setupGui()
    player.CharacterAdded:Connect(setupGui)

elseif Elisium.Camlock.Mode == "PC" then
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        if input.UserInputType == Enum.UserInputType.Keyboard and input.KeyCode == Enum.KeyCode.C then
            ToggleLock()
        end
    end)
end

RunService.RenderStepped:Connect(function()
    if target and target.Character and target.Character:FindFirstChild(Elisium.Camlock.AimPart) then
        local aimPart = target.Character[Elisium.Camlock.AimPart]
        local targetPosition = aimPart.Position + aimPart.Velocity * Elisium.Camlock.Prediction
        local lookPosition = CFrame.new(Camera.CFrame.p, targetPosition)
        Camera.CFrame = Camera.CFrame:Lerp(lookPosition, Elisium.Camlock.Smoothness)

        if Elisium.TargetStrafe.Enabled and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local lp = player.Character
            local targpos = target.Character.HumanoidRootPart.Position
            local strafeOffset

            if Elisium.TargetStrafe.RandomizerMode then
                strafeOffset = Vector3.new(
                    math.random(-Elisium.TargetStrafe.StrafeRadius, Elisium.TargetStrafe.StrafeRadius),
                    math.random(0, Elisium.TargetStrafe.StrafeHeight),
                    math.random(-Elisium.TargetStrafe.StrafeRadius, Elisium.TargetStrafe.StrafeRadius)
                )
            else
                strafeOffset = Vector3.new(
                    math.cos(tick() * Elisium.TargetStrafe.StrafeSpeed) * Elisium.TargetStrafe.StrafeRadius,
                    Elisium.TargetStrafe.StrafeHeight,
                    math.sin(tick() * Elisium.TargetStrafe.StrafeSpeed) * Elisium.TargetStrafe.StrafeRadius
                )
            end

            local strafePosition = targpos + strafeOffset
            strafePosition = Vector3.new(strafePosition.X, math.max(strafePosition.Y, targpos.Y), strafePosition.Z)

            lp:SetPrimaryPartCFrame(CFrame.new(strafePosition))
            lp.HumanoidRootPart.CFrame = CFrame.new(
                lp.HumanoidRootPart.Position,
                Vector3.new(targpos.X, lp.HumanoidRootPart.Position.Y, targpos.Z)
            )
        end
    end
end)

spawn(function()
    RunService.Heartbeat:Connect(function()
        if Elisium.Cframe.enabled and player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character:FindFirstChild("Humanoid") then
            player.Character.HumanoidRootPart.CFrame =
                player.Character.HumanoidRootPart.CFrame + player.Character.Humanoid.MoveDirection * Elisium.Cframe.speed
        end
    end)
end)

local mt = getrawmetatable(game)
setreadonly(mt, false)
local oldNameCall = mt.__namecall
mt.__namecall = newcclosure(function(Self, ...)
    local args = {...}
    local methodName = getnamecallmethod()
    if not checkcaller() and methodName == "FireServer" and Elisium.TargetAim.enabled and target and target.Character and target.Character:FindFirstChild(Elisium.TargetAim.targetPart) then
        for i, Argument in ipairs(args) do
            if typeof(Argument) == "Vector3" then
                args[i] = target.Character[Elisium.TargetAim.targetPart].Position + (target.Character[Elisium.TargetAim.targetPart].Velocity * Elisium.TargetAim.prediction)
            end
        end
    end
    return oldNameCall(Self, unpack(args))
end)
setreadonly(mt, true)

local circle = Drawing.new("Circle")
circle.Position = Vector2.new(Camera.ViewportSize.X / 2, Camera.ViewportSize.Y / 2)
circle.Radius = 120
circle.Color = Color3.fromRGB(255, 0, 0)
circle.Thickness = 1
circle.Filled = false
circle.Visible = true

local newindex
newindex = hookmetamethod(game, "__newindex", function(self, Index, Value)
    if not checkcaller() and IsA(self, "Humanoid") and Index == "JumpPower" then
        return
    end
    return newindex(self, Index, Value)
end)

local backup = hookfunction(mt.__newindex, newcclosure(function(self, key, value)
    if key == "WalkSpeed" and value < 16 then
        value = 16
    end
    return backup(self, key, value)
end))
