repeat task.wait() until game:IsLoaded()

local elisiumLoader = Instance.new("ScreenGui")
local BackFrame = Instance.new("Frame")
local UICorner = Instance.new("UICorner")
local TopFrame = Instance.new("Frame")
local UICorner_2 = Instance.new("UICorner")
local UIGradient = Instance.new("UIGradient")
local UIGradient_2 = Instance.new("UIGradient")
local LoadingText = Instance.new("TextLabel")
local LoadingFrame = Instance.new("Frame")
local UICorner_3 = Instance.new("UICorner")
local UIGradient_3 = Instance.new("UIGradient")
local Loading = Instance.new("Frame")
local UICorner_4 = Instance.new("UICorner")
local UIGradient_4 = Instance.new("UIGradient")
local UIAspectRatioConstraint = Instance.new("UIAspectRatioConstraint")

elisiumLoader.Name = "elisiumLoader"
elisiumLoader.Parent = game:GetService("CoreGui")
elisiumLoader.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

BackFrame.Name = "BackFrame"
BackFrame.Parent = elisiumLoader
BackFrame.AnchorPoint = Vector2.new(0.5, 0.5)
BackFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
BackFrame.Position = UDim2.new(0.5, 0, 0.5, 0)
BackFrame.Size = UDim2.new(0, 361, 0, 101)

UICorner.CornerRadius = UDim.new(0, 12)
UICorner.Parent = BackFrame

TopFrame.Name = "TopFrame"
TopFrame.Parent = BackFrame
TopFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
TopFrame.Size = UDim2.new(0, 361, 0, 29)

UICorner_2.CornerRadius = UDim.new(0, 12)
UICorner_2.Parent = TopFrame

UIGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 121, 54)),
    ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 182, 85))
}
UIGradient.Rotation = 90
UIGradient.Parent = TopFrame

local TitleContainer = Instance.new("Frame")
TitleContainer.Parent = TopFrame
TitleContainer.BackgroundTransparency = 1
TitleContainer.Size = UDim2.new(0, 200, 0, 29)
TitleContainer.Position = UDim2.new(0.5, -100, 0, 0)

local UIListLayout = Instance.new("UIListLayout")
UIListLayout.FillDirection = Enum.FillDirection.Horizontal
UIListLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
UIListLayout.VerticalAlignment = Enum.VerticalAlignment.Center
UIListLayout.Padding = UDim.new(0, 4)
UIListLayout.Parent = TitleContainer

local Icon = Instance.new("ImageLabel")
Icon.Name = "Icon"
Icon.Parent = TitleContainer
Icon.BackgroundTransparency = 1
Icon.Size = UDim2.new(0, 20, 0, 20)
Icon.Image = "rbxassetid://127430667944718"

local TitleText = Instance.new("TextLabel")
TitleText.Name = "TitleText"
TitleText.Parent = TitleContainer
TitleText.BackgroundTransparency = 1
TitleText.Size = UDim2.new(0, 160, 0, 29)
TitleText.Font = Enum.Font.Code
TitleText.Text = "Elisium"
TitleText.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleText.TextScaled = true
TitleText.TextWrapped = true

UIGradient_2.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 182, 76)),
    ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 81, 37))
}
UIGradient_2.Offset = Vector2.new(0.5, 0)
UIGradient_2.Rotation = 90
UIGradient_2.Parent = BackFrame

LoadingText.Name = "LoadingText"
LoadingText.Parent = BackFrame
LoadingText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
LoadingText.BackgroundTransparency = 1
LoadingText.Position = UDim2.new(0.0775, 0, 0.2868, 0)
LoadingText.Size = UDim2.new(0, 312, 0, 25)
LoadingText.Font = Enum.Font.Code
LoadingText.Text = "welcome"
LoadingText.TextColor3 = Color3.fromRGB(163, 163, 163)
LoadingText.TextScaled = true
LoadingText.TextSize = 14
LoadingText.TextWrapped = true

LoadingFrame.Name = "LoadingFrame"
LoadingFrame.Parent = BackFrame
LoadingFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
LoadingFrame.Position = UDim2.new(0.0526, 0, 0.6055, 0)
LoadingFrame.Size = UDim2.new(0, 321, 0, 26)

UICorner_3.CornerRadius = UDim.new(0, 12)
UICorner_3.Parent = LoadingFrame

UIGradient_3.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0.00, Color3.fromRGB(61, 106, 61)),
    ColorSequenceKeypoint.new(1.00, Color3.fromRGB(26, 61, 26))
}
UIGradient_3.Rotation = 90
UIGradient_3.Parent = LoadingFrame

Loading.Name = "Loading"
Loading.Parent = LoadingFrame
Loading.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Loading.Position = UDim2.new(0, 0, -0.00988, 0)
Loading.Size = UDim2.new(0.028, 0, 1.01, 0)

UICorner_4.CornerRadius = UDim.new(0, 12)
UICorner_4.Parent = Loading

UIGradient_4.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0.00, Color3.fromRGB(0, 220, 92)),
    ColorSequenceKeypoint.new(1.00, Color3.fromRGB(0, 115, 51))
}
UIGradient_4.Rotation = 90
UIGradient_4.Parent = Loading

UIAspectRatioConstraint.Parent = BackFrame
UIAspectRatioConstraint.AspectRatio = 3.574

local function playSound()
    local sound = Instance.new("Sound")
    sound.SoundId = "rbxassetid://3320590485"
    sound.Parent = game:GetService("SoundService")
    sound:Play()
end

local function loadingSequence()
    local bar = Loading
    local loadingText = LoadingText

    playSound()
    task.wait(1)
    bar:TweenSize(UDim2.new(0, 88, 0, 26), "Out", "Quad", 0.5)
    loadingText.Text = "setting up"

    task.wait(1)
    playSound()
    bar:TweenSize(UDim2.new(0, 165, 0, 26), "Out", "Quad", 0.5)
    loadingText.Text = "loading"

    task.wait(1.2)
    playSound()
    bar:TweenSize(UDim2.new(0, 321, 0, 26), "Out", "Quad", 0.5)
    loadingText.Text = "ready!"

    task.wait(1)
    elisiumLoader:Destroy()
end

loadingSequence()

task.wait(4)

local playerGui = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "IntroScreen"
screenGui.Parent = playerGui

local frame = Instance.new("Frame")
frame.Name = "IntroFrame"
frame.Parent = screenGui
frame.Size = UDim2.new(1, 0, 1, 0)
frame.BackgroundTransparency = 1

local imageLabel = Instance.new("ImageLabel")
imageLabel.Name = "IntroImage"
imageLabel.Parent = frame
imageLabel.Size = UDim2.new(0.01, 0, 0.01, 0)
imageLabel.Position = UDim2.new(0.5, 0, 0.5, 0)
imageLabel.Image = "rbxassetid://127430667944718"
imageLabel.BackgroundTransparency = 1
imageLabel.ImageTransparency = 1
imageLabel.AnchorPoint = Vector2.new(0.5, 0.5)

local sound = Instance.new("Sound")
sound.Name = "IntroSound"
sound.Parent = frame
sound.SoundId = "rbxassetid://8940801080"
sound.Volume = 0.5
sound:Play()

local tweenService = game:GetService("TweenService")

local blurEffect = Instance.new("BlurEffect")
blurEffect.Parent = game:GetService("Lighting")
blurEffect.Size = 60

local zoomTweenInfo = TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
local blurTweenInfo = TweenInfo.new(4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)

local fadeIn = tweenService:Create(imageLabel, zoomTweenInfo, {ImageTransparency = 0})
local fadeOut = tweenService:Create(imageLabel, zoomTweenInfo, {ImageTransparency = 1})
local blurTween = tweenService:Create(blurEffect, blurTweenInfo, {Size = 0})
local zoomTween = tweenService:Create(imageLabel, zoomTweenInfo, {Size = UDim2.new(0.35, 0, 0.35, 0)})

fadeIn:Play()
fadeIn.Completed:Wait()

zoomTween:Play()
blurTween:Play()

task.wait(3)

fadeOut:Play()
fadeOut.Completed:Wait()

blurTween.Completed:Wait()

blurEffect:Destroy()
screenGui:Destroy()
task.wait(1)

local target = nil
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local player = Players.LocalPlayer
local Mouse = player:GetMouse()
local Camera = Workspace.CurrentCamera
local playerCharacter = player.Character or player.CharacterAdded:Wait()

RunService.RenderStepped:Connect(function(deltaTime)
    if Elisium.Camlock.Spectate and target then
        Camera.CameraSubject = target.Character
    else
        Camera.CameraSubject = player.Character.Humanoid
    end
end)

local Notification = Instance.new("ScreenGui")
local Holder = Instance.new("Frame")
local UIListLayout = Instance.new("UIListLayout")
local TweenService = game:GetService("TweenService")

for Key, Object in pairs(getgc(true)) do
    if type(Object) == "table" then
        setreadonly(Object, false)
        local indexInstance = rawget(Object, "indexInstance")
        if type(indexInstance) == "table" and indexInstance[1] == "kick" then
            setreadonly(indexInstance, false)
            rawset(Object, "Table", {
                "kick",
                function()
                    coroutine.yield()
                end
            })
            warn("\n---[ INFO ]---\nBypassed Adonis Anti-Cheat/Anti-Exploit.\nBypass Method: Preventing Script Table From Communicating With The Server.")
            break
        end
    end
end

Notification.Name = "Notification"
Notification.Parent = game:GetService("CoreGui")
Notification.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

Holder.Name = "Holder"
Holder.Parent = Notification
Holder.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
Holder.BackgroundTransparency = 1
Holder.Position = UDim2.new(1, -10, 0, 10)
Holder.AnchorPoint = Vector2.new(1, 0)
Holder.Size = UDim2.new(0, 243, 0, 240)

UIListLayout.Parent = Holder
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder
UIListLayout.Padding = UDim.new(0, 4)

local function createNotificationTemplate(text, duration)
    local Template = Instance.new("Frame")
    local ColorBar = Instance.new("Frame")
    local TextLabel = Instance.new("TextLabel")

    Template.Name = text
    Template.Parent = Holder
    Template.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    Template.BorderSizePixel = 0
    Template.Size = UDim2.new(1, 0, 0, 22)
    Template.Transparency = 1

    ColorBar.Name = "ColorBar"
    ColorBar.Parent = Template
    ColorBar.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
    ColorBar.BorderSizePixel = 0
    ColorBar.Size = UDim2.new(0, 2, 0, 22)
    ColorBar.Transparency = 1

    TextLabel.Parent = Template
    TextLabel.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
    TextLabel.BackgroundTransparency = 1
    TextLabel.BorderSizePixel = 0
    TextLabel.Position = UDim2.new(0, 8, 0, 0)
    TextLabel.Size = UDim2.new(1, -10, 0, 22)
    TextLabel.Font = Enum.Font.Code
    TextLabel.Text = text .. " [" .. duration .. "s]"
    TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TextLabel.TextSize = 12
    TextLabel.TextStrokeTransparency = 0
    TextLabel.TextXAlignment = Enum.TextXAlignment.Left
    TextLabel.Transparency = 1

    return Template, ColorBar, TextLabel
end

function notify(text, time)
    if time <= 0 then
        warn("Notification duration must be greater than 0")
        return
    end

    local Template, ColorBar, TextLabel = createNotificationTemplate(text, time)

    local tweenInfo = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local fadeInGoal = {Transparency = 0}
    local fadeOutGoal = {Transparency = 1}

    local sizeTween = TweenService:Create(Template, tweenInfo, fadeInGoal)
    local colorBarTween = TweenService:Create(ColorBar, tweenInfo, fadeInGoal)
    local textTween = TweenService:Create(TextLabel, tweenInfo, fadeInGoal)

    sizeTween:Play()
    colorBarTween:Play()
    textTween:Play()

    local elapsed = 0
    local updateConnection

    updateConnection = RunService.RenderStepped:Connect(function(dt)
        elapsed = elapsed + dt
        local remainingTime = math.max(0, time - elapsed)
        TextLabel.Text = text .. " [" .. string.format("%.1f", remainingTime) .. "s]"

        if remainingTime <= 0 then
            updateConnection:Disconnect()
            local fadeOutTween = TweenService:Create(Template, tweenInfo, fadeOutGoal)
            fadeOutTween:Play()
            fadeOutTween.Completed:Wait()
            Template:Destroy()
        end
    end)
end

local function GetClosestPlayer()
    local closestPlayer = nil
    local shortestScore = math.huge

    for _, plr in pairs(Players:GetPlayers()) do
        if plr ~= player and plr.Character and plr.Character:FindFirstChild(Elisium.Camlock.AimPart) and plr.Character:FindFirstChild("Humanoid") and plr.Character.Humanoid.Health > 0 then
            local part = plr.Character[Elisium.Camlock.AimPart]
            local relativePos = part.Position - Camera.CFrame.Position
            local playerDistance = relativePos.Magnitude
            local screenPosition, onScreen = Camera:WorldToViewportPoint(part.Position)

            if onScreen then
                local angle = math.deg(math.acos(Camera.CFrame.LookVector:Dot(relativePos.Unit)))
                local mouseDistance = (Vector2.new(screenPosition.X, screenPosition.Y) - Vector2.new(Mouse.X, Mouse.Y)).Magnitude

                local score = mouseDistance * 0.3 + (angle / 90) * 0.5 + (playerDistance / 1000) * 0.2

                local ray = Ray.new(Camera.CFrame.Position, relativePos.Unit * playerDistance)
                local hitPart = Workspace:FindPartOnRayWithIgnoreList(ray, {plr.Character})

                if (not hitPart or hitPart:IsDescendantOf(plr.Character)) and score < shortestScore then
                    closestPlayer = plr
                    shortestScore = score
                end
            end
        end
    end

    return closestPlayer
end

local function ToggleLock()
    if Elisium.Camlock.Enabled then
        if target then
            notify("Elisuim: Unlocked!", 5)
            target = nil
        else
            target = GetClosestPlayer()
            if target then
                notify("Elisuim: Locked onto " .. tostring(target.Name), 5)
            else
                notify("Elisuim: No target found", 5)
            end
        end
    else
        notify("Elisuim: not enabled", 5)
    end
end

if Elisium.Camlock.Mode == "Tool" then
    local Tool = Instance.new("Tool")
    Tool.RequiresHandle = false
    Tool.Name = "Lock Tool"
    Tool.Parent = player.Backpack

    local function onCharacterAdded()
        Tool.Parent = player.Backpack
    end

    player.CharacterAdded:Connect(onCharacterAdded)

    player.CharacterRemoving:Connect(function()
        Tool.Parent = player.Backpack
    end)

    Tool.Activated:Connect(function()
        ToggleLock()
    end)
elseif Elisium.Camlock.Mode == "Button" then
    local playerGui = player:WaitForChild("PlayerGui")

    local function setupGui()
        local screenGui = playerGui:FindFirstChild("LockScreenGui")

        if not screenGui then
            screenGui = Instance.new("ScreenGui")
            screenGui.Name = "LockScreenGui"
            screenGui.Parent = playerGui
        end

        local button = screenGui:FindFirstChild("LockButton")

        if not button then
            button = Instance.new("ImageButton")
            button.Name = "LockButton"
            button.Size = UDim2.new(0, 55, 0, 55)
            button.Position = UDim2.new(0.5, -100, 0.8, -25)
            button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
            button.Image = "rbxassetid://127430667944718"
            button.Parent = screenGui
            button.Active = true
            button.Draggable = true

            local UICorner = Instance.new("UICorner")
            UICorner.CornerRadius = UDim.new(0, 25)
            UICorner.Parent = button

            button.MouseButton1Click:Connect(function()
                ToggleLock()
            end)
        end
    end

    setupGui()

    player.CharacterAdded:Connect(function()
        setupGui()
    end)
end

RunService.RenderStepped:Connect(function()
    if target and target.Character and target.Character:FindFirstChild(Elisium.Camlock.AimPart) then
        local aimPart = target.Character[Elisium.Camlock.AimPart]
        local targetPosition = aimPart.Position + aimPart.Velocity * Elisium.Camlock.Prediction
        local lookPosition = CFrame.new(Camera.CFrame.p, targetPosition)
        Camera.CFrame = Camera.CFrame:Lerp(lookPosition, Elisium.Camlock.Smoothness)

        if Elisium.TargetStrafe.Enabled then
            local lp = player.Character
            local targpos = target.Character.HumanoidRootPart.Position
            local strafeOffset

            if Elisium.TargetStrafe.RandomizerMode then
                strafeOffset = Vector3.new(
                    math.random(-Elisium.TargetStrafe.StrafeRadius, Elisium.TargetStrafe.StrafeRadius),
                    math.random(0, Elisium.TargetStrafe.StrafeHeight),
                    math.random(-Elisium.TargetStrafe.StrafeRadius, Elisium.TargetStrafe.StrafeRadius)
                )
            else
                strafeOffset = Vector3.new(
                    math.cos(tick() * Elisium.TargetStrafe.StrafeSpeed) * Elisium.TargetStrafe.StrafeRadius,
                    Elisium.TargetStrafe.StrafeHeight,
                    math.sin(tick() * Elisium.TargetStrafe.StrafeSpeed) * Elisium.TargetStrafe.StrafeRadius
                )
            end

            local strafePosition = targpos + strafeOffset
            strafePosition = Vector3.new(strafePosition.X, math.max(strafePosition.Y, targpos.Y), strafePosition.Z)

            lp:SetPrimaryPartCFrame(CFrame.new(strafePosition))
            player.Character.HumanoidRootPart.CFrame = CFrame.new(
                player.Character.HumanoidRootPart.Position,
                Vector3.new(targpos.X, player.Character.HumanoidRootPart.Position.Y, targpos.Z)
            )
        end
    end
end)

spawn(function()
    RunService.Heartbeat:Connect(function()
        if Elisium.Cframe.enabled then
            player.Character.HumanoidRootPart.CFrame =
                player.Character.HumanoidRootPart.CFrame + player.Character.Humanoid.MoveDirection * Elisium.Cframe.speed
        end
    end)
end)

for _, con in pairs(getconnections(Camera.Changed)) do
    con:Disable()
end
for _, con in pairs(getconnections(Camera:GetPropertyChangedSignal("CFrame"))) do
    con:Disable()
end

local mt = getrawmetatable(game)
local oldNameCall = mt.__namecall
setreadonly(mt, false)

mt.__namecall = newcclosure(function(Self, ...)
    local args = {...}
    local methodName = getnamecallmethod()
    if not checkcaller() and methodName == "FireServer" and Elisium.TargetAim.enabled then
        for i, Argument in ipairs(args) do
            if typeof(Argument) == "Vector3" and target and target.Character then
                args[i] = target.Character[Elisium.TargetAim.targetPart].Position + (target.Character[Elisium.TargetAim.targetPart].Velocity * Elisium.TargetAim.prediction)
            end
        end
    end
    return oldNameCall(Self, unpack(args))
end)

setreadonly(mt, true)

function drawRedCircle()
    local circle = Drawing.new("Circle")
    circle.Position = Vector2.new(Workspace.CurrentCamera.ViewportSize.X / 2, Workspace.CurrentCamera.ViewportSize.Y / 2)
    circle.Radius = 120
    circle.Color = Color3.fromRGB(0, 0, 0)
    circle.Thickness = 1
    circle.Filled = false
    circle.Visible = true
end

drawRedCircle()

task.wait(1)
game:GetService("Players").PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        local humanoid = character:WaitForChild("Humanoid")
        humanoid:SetStateEnabled(Enum.HumanoidStateType.Jumping, true)
        humanoid:SetStateEnabled(Enum.HumanoidStateType.Freefall, true)
        game:GetService("RunService").Heartbeat:Connect(function()
            humanoid.Jump = humanoid:GetState() == Enum.HumanoidStateType.Jumping
        end)
    end)
end)
task.wait(1)
local howmany = 0

local function MakeButton(ButtonName, Color, callback)
    howmany = howmany + 1
    local player = game:GetService("Players").LocalPlayer
    local playerGui = player:WaitForChild("PlayerGui", 5)
    if not playerGui then return end

    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "CustomButtonGUI_" .. ButtonName
    ScreenGui.ResetOnSpawn = false
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
    ScreenGui.Parent = playerGui

    local Frame = Instance.new("Frame")
    Frame.Parent = ScreenGui
    Frame.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
    Frame.BackgroundTransparency = 0.1
    Frame.Position = UDim2.new(1, -150, 0, (howmany - 1) * 60 + 50)
    Frame.Size = UDim2.new(0, 120, 0, 40)
    Frame.Active = true
    Frame.Draggable = true

    local uiStroke = Instance.new("UIStroke", Frame)
    uiStroke.Color = Color
    uiStroke.Thickness = 1.8
    uiStroke.Transparency = 0
    uiStroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

    local uiGlow = Instance.new("UIStroke")
    uiGlow.Parent = Frame
    uiGlow.Color = Color
    uiGlow.Thickness = 6
    uiGlow.Transparency = 0.6
    uiGlow.ApplyStrokeMode = Enum.ApplyStrokeMode.Border

    local uiCorner = Instance.new("UICorner", Frame)
    uiCorner.CornerRadius = UDim.new(0, 8)

    local gradient = Instance.new("UIGradient", uiGlow)
    gradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0, Color3.fromRGB(200, 100, 255)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(128, 0, 128))
    }
    gradient.Rotation = 45

    local Icon = Instance.new("ImageLabel", Frame)
    Icon.BackgroundTransparency = 1
    Icon.Size = UDim2.new(0, 28, 0, 28)
    Icon.AnchorPoint = Vector2.new(0, 0.5)
    Icon.Position = UDim2.new(0.05, 0, 0.5, 0)
    Icon.Image = "rbxassetid://10734923214"
    Icon.ImageColor3 = Color

    local Button = Instance.new("TextButton", Frame)
    Button.BackgroundTransparency = 1
    Button.Size = UDim2.new(0, 80, 0, 28)
    Button.AnchorPoint = Vector2.new(0.5, 0.5)
    Button.Position = UDim2.new(0.65, 0, 0.5, 0)
    Button.Font = Enum.Font.Arimo
    Button.Text = ButtonName
    Button.TextColor3 = Color
    Button.TextScaled = true

    local textSizeConstraint = Instance.new("UITextSizeConstraint", Button)
    textSizeConstraint.MaxTextSize = 25

    local buttonState = false
    Button.MouseButton1Click:Connect(function()
        buttonState = not buttonState
        callback(buttonState)
        Icon.Image = buttonState and "rbxassetid://10735024209" or "rbxassetid://10734923214"
    end)
end

local Vars = {
    Services = {
        Players = game:GetService("Players"),
        RunService = game:GetService("RunService"),
        ReplicatedStorage = game:GetService("ReplicatedStorage"),
    },
    Player = {
        Player = game:GetService("Players").LocalPlayer,
        Character = nil,
        Root = nil,
        Humanoid = nil,
    },
    Camera = {
        Instance = game:GetService("Workspace").CurrentCamera,
    },
    Settings = {
        MAX_LENGTH = 900000,
        ENABLED_OFFSET = CFrame.new(0, 0, 0),
        DISABLED_OFFSET = CFrame.new(0, 0, 0),
    },
    State = {
        RootPos = Vector3.new(0, 0, 0),
        Active = nil,
        MCenabled = false,
    },
    BackpackData = {
        Character = nil,
        Humanoid = nil,
        Backpack = nil,
    },
}

local MacroEmote = {
    YungBlud = "15610015346",
    Borocks = "3994129128",
    Fishing = "3236848555",
    VPose = "10214418283",
    BouncyTwirl = "14353423348",
    Nimbus = "10147924028"
}

local Snm = {
    tech = {
        Tech = {
            MacroDance = "YungBlud",
            MacroDanceDelay = 0.5,
            MacroSpeed = 0.25,
        }
    }
}

Vars.Player.Character = Vars.Player.Player.Character or Vars.Player.Player.CharacterAdded:Wait()
Vars.Player.Root = Vars.Player.Character:WaitForChild("HumanoidRootPart")
Vars.Player.Humanoid = Vars.Player.Character:FindFirstChildOfClass("Humanoid")

local function UpdatePos()
    local character = Vars.Player.Player.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        Vars.State.RootPos = character.HumanoidRootPart.Position
    end
end

local function UpdateAutoRotate(state)
    local character = Vars.Player.Player.Character
    if character and character:FindFirstChildOfClass("Humanoid") then
        character:FindFirstChildOfClass("Humanoid").AutoRotate = state
    end
end

local function GetUpdatedCameraCFrame()
    if game:GetService("Workspace").CurrentCamera then
        return CFrame.new(
            Vars.State.RootPos,
            Vector3.new(
                game:GetService("Workspace").CurrentCamera.CFrame.LookVector.X * Vars.Settings.MAX_LENGTH,
                Vars.State.RootPos.Y,
                game:GetService("Workspace").CurrentCamera.CFrame.LookVector.Z * Vars.Settings.MAX_LENGTH
            )
        )
    end
end

local function EnableShiftlock()
    UpdatePos()
    UpdateAutoRotate(false)
    local character = Vars.Player.Player.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        character.HumanoidRootPart.CFrame = GetUpdatedCameraCFrame()
    end
    game:GetService("Workspace").CurrentCamera.CFrame = Vars.Camera.Instance.CFrame * Vars.Settings.ENABLED_OFFSET
end

local function DisableShiftlock()
    UpdatePos()
    UpdateAutoRotate(true)
    game:GetService("Workspace").CurrentCamera.CFrame = Vars.Camera.Instance.CFrame * Vars.Settings.DISABLED_OFFSET
    if Vars.State.Active then
        Vars.State.Active:Disconnect()
        Vars.State.Active = nil
    end
end

local function ShiftLock()
    if Vars.State.MCenabled then
        if not Vars.State.Active then
            Vars.State.Active = Vars.Services.RunService.RenderStepped:Connect(EnableShiftlock)
        else
            DisableShiftlock()
        end
    end
end

MakeButton("Macro", Color3.fromRGB(255, 255, 255), function(toggle)
    Vars.State.MCenabled = toggle

    if not toggle then
        DisableShiftlock()
        return
    end

    Vars.BackpackData.Character = Vars.Player.Player.Character or Vars.Player.Player.CharacterAdded:Wait()
    Vars.BackpackData.Humanoid = Vars.BackpackData.Character:FindFirstChild("Humanoid")
    Vars.BackpackData.Backpack = Vars.Player.Player.Backpack

    for _, item in pairs(Vars.BackpackData.Character:GetChildren()) do
        if item:IsA("Tool") then
            item.Parent = Vars.BackpackData.Backpack
        end
    end

    local function PlayEmote(humanoid, id)
        local success, result = pcall(function()
            return humanoid:PlayEmoteAndGetAnimTrackById(id)
        end)
        return success and result or nil
    end

    PlayEmote(Vars.BackpackData.Humanoid, MacroEmote[Snm.tech.Tech.MacroDance])
    task.wait(Snm.tech.Tech.MacroDanceDelay)

    local items = {}
    for _, tool in pairs(Vars.BackpackData.Backpack:GetChildren()) do
        if tool:IsA("Tool") then
            table.insert(items, tool)
        end
    end

    if #items > 0 then
        local selectedTool = items[math.random(1, #items)]
        selectedTool.Parent = Vars.BackpackData.Character
        task.wait(0.1)
        selectedTool.Parent = Vars.BackpackData.Backpack
    end
end)

local TimeElapsed = 0
local ShiftLockLoopConnection = nil

Vars.Services.RunService.RenderStepped:Connect(function(deltaTime)
    TimeElapsed = TimeElapsed + deltaTime
    if TimeElapsed >= Snm.tech.Tech.MacroSpeed then
        if Vars.State.MCenabled then
            if not ShiftLockLoopConnection then
                ShiftLockLoopConnection = Vars.Services.RunService.RenderStepped:Connect(function()
                    ShiftLock()
                end)
            end
        else
            DisableShiftlock()
        end
        TimeElapsed = 0
    end
end)
